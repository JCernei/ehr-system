@page "/login"
@layout EmptyLayout
@inject NavigationManager NavigationManager
@inject AuthService AuthService

<MudGrid Class="justify-center">
    <MudItem sm="5">
        <MudCard>
            <MudCardHeader>
                <CardHeaderContent>
                    <MudText Align="Align.Center" Typo="Typo.h5">Sign In</MudText>
                </CardHeaderContent>
            </MudCardHeader>
            <MudCardContent Class="justify-md-center">
                <MudForm @bind-IsValid="@isValid">
                    <MudTextField @bind-Value="userInfo.Idnp" T="string" Label="IDNP" Required="true"/>
                    <MudTextField @bind-Value="userInfo.Password" T="string" Label="Password" InputType="InputType.Password" Required="true"/>
                </MudForm>
            </MudCardContent>
        </MudCard>
        <MudPaper Class="pa-4 mt-4">
            <MudButton Variant="Variant.Filled"
                       FullWidth="true"
                       OnClick="@LoginUser"
                       Color="Color.Secondary"
                       DisableElevation="true"
                       Disabled="@(!isValid)">
                Log In
            </MudButton>
        </MudPaper>
    </MudItem>
</MudGrid>

@code {
    readonly LoginDto userInfo = new();
    bool isValid;

    protected override async Task OnInitializedAsync()
    {
        var isAuthenticated = await AuthService.IsUserAuthenticated();

        if (isAuthenticated)
            NavigationManager.NavigateTo("");
    }

    public async Task LoginUser()
    {
        var result = await AuthService.Login(userInfo);

        if (result.Status)
        {
            Snackbar.Add("Successfully Logged In", Severity.Success);
            NavigationManager.NavigateTo("");
        }
        else
        {
            Snackbar.Add("Wrong Credentials", Severity.Error);
            return;
        }

        StateHasChanged();
    }

}
