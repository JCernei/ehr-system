@page "/lab-results"
@layout MainLayout
@inject HttpClient HttpClient

<PageTitle>Lab Results</PageTitle>

<MudGrid>
    <MudItem md="12">
        <MudText Typo="Typo.h4" GutterBottom="true">Lab Results</MudText>
    </MudItem>
    @if (labResults is null || !labResults.Any())
    {
        <MudItem md="12">
            <MudAlert Severity="Severity.Info">At the moment you do not have any lab results.</MudAlert>
        </MudItem>
    }
    else
    {
        <MudItem md="12">
            <MudDataGrid Items="labResults" ReadOnly="true">
                <Columns>
                    <HierarchyColumn T="LabResultResponseDto"/>
                    <PropertyColumn Property="x => x.TestName" Title="Test"/>
                    <PropertyColumn Property="x => x.TimeStamp" Title="Time"/>
                </Columns>
                <ChildRowContent>
                    <MudItem>
                        <MudText>Download:</MudText>
                        <MudLink Class="btn"
                                 download=@($"{context.Item.TestName} {context.Item.TimeStamp:dd-MM-yyyy}{context.Item.FileType}".Replace(" ", "_"))
                                 role="button"
                                 Href=@($"http://localhost:5254/api/lab-results/{context.Item.Id}/download")
                                 Target="_top">
                            @($"{context.Item.TestName} {context.Item.TimeStamp:dd-MM-yyyy}{context.Item.FileType}".Replace(" ", "_"))
                        </MudLink>
                    </MudItem>
                </ChildRowContent>
                <PagerContent>
                    <MudDataGridPager T="LabResultResponseDto"/>
                </PagerContent>
            </MudDataGrid>
        </MudItem>
    }
</MudGrid>


@code {
    // [Parameter] public string? PatientId { get; set; }
    private List<LabResultResponseDto> labResults;

    protected override async Task OnInitializedAsync()
    {
        await GetLabResults();

        StateHasChanged();

        await base.OnInitializedAsync();
    }

    public async Task GetLabResults()
    {
        labResults = await HttpClient.GetFromJsonAsync<List<LabResultResponseDto>>($"http://localhost:5254/api/lab-results");
    }
}