@page "/consultations"
@layout MainLayout
@inject HttpClient HttpClient

<PageTitle>Consultations</PageTitle>

<MudGrid>
    <MudItem md="12">
        <MudText Typo="Typo.h4" GutterBottom="true">Consultations</MudText>
    </MudItem>
    @if (consultations is null || !consultations.Any())
    {
        <MudItem md="12">
            <MudAlert Severity="Severity.Info">At the moment you do not have any consultation.</MudAlert>
        </MudItem>
    }
    else
    {
        <MudItem md="12">
            <MudDataGrid Items="@consultations" ReadOnly="true">
                <Columns>
                    <HierarchyColumn T="ConsultationResponseDto"/>
                    <PropertyColumn Property="x => x.PatientId" Title="Patient"/>
                    <PropertyColumn Property="x => x.TimeStamp" Title="Time"/>
                    <PropertyColumn Property="x => x.DoctorId" Title="Doctor"/>
                </Columns>
                <ChildRowContent>
                    <MudTextField T="string" ReadOnly="true" Variant="Variant.Text" DisableUnderLine AutoGrow
                                  Text=@context.Item.Description/>
                </ChildRowContent>
                <PagerContent>
                    <MudDataGridPager T="ConsultationResponseDto"/>
                </PagerContent>
            </MudDataGrid>
        </MudItem>
    }
</MudGrid>


@code {
    private List<ConsultationResponseDto> consultations = new();

    protected override async Task OnInitializedAsync()
    {
        await GetConsultations();

        StateHasChanged();

        await base.OnInitializedAsync();
    }

    public async Task GetConsultations()
    {
        consultations = await HttpClient.GetFromJsonAsync<List<ConsultationResponseDto>>("api/consultations");
    }

}
