@page "/{PatientId}/lab-results"
@layout MainLayout
@inject HttpClient HttpClient

<PageTitle>Lab Results</PageTitle>

<MudGrid>
    <MudItem md="12">
        <MudText Typo="Typo.h4" GutterBottom="true">Lab Results</MudText>
    </MudItem>
    @if (labResults is null || !labResults.Any())
    {
        <MudItem md="12">
            <MudAlert Severity="Severity.Info">At the moment you do not have any lab results.</MudAlert>
        </MudItem>
    }
    else
    {
        <Virtualize Items="labResults" Context="labResult">
            <MudItem md="3">
                <MudCard>
                    <MudCardContent>
                        <MudText>Test Name: @labResult.TestName</MudText>
                        <MudText>Test Name: @labResult.FilePath</MudText>
                        <!-- Add more details here as needed -->
                    </MudCardContent>
                </MudCard>
            </MudItem>
        </Virtualize>
    }
</MudGrid>


@code {
    [Parameter] public string? PatientId { get; set; }
    private List<LabResultDto> labResults;

    protected override async Task OnInitializedAsync()
    {
        await GetLabResults();

        StateHasChanged();

        await base.OnInitializedAsync();
    }

    public async Task GetLabResults()
    {
        labResults = await HttpClient.GetFromJsonAsync<List<LabResultDto>>($"http://localhost:5254/api/{PatientId}/lab-results");
    }
}